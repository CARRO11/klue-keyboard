# Railway 배포용 Production 설정
spring.application.name=klue_sever

# Railway MySQL Database Configuration (자동 생성된 환경 변수 사용)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/railway}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${MYSQLUSER:root}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${MYSQLPASSWORD:}}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Server Configuration - Railway 환경 최적화
server.port=${PORT:8080}
server.address=0.0.0.0

# Spring Boot 자동 구성 제외 (메트릭 관련 문제 해결)
spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration

# Production 환경에서 Actuator 최소 설정
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true

# 모든 메트릭 완전 비활성화
management.metrics.enable.all=false
management.metrics.export.jmx.enabled=false
management.metrics.binders.processor.enabled=false
management.metrics.binders.jvm.enabled=false
management.metrics.binders.system.enabled=false
management.metrics.binders.uptime.enabled=false
management.metrics.binders.disk-space.enabled=false
management.metrics.binders.tomcat.enabled=false
management.metrics.binders.hikaricp.enabled=false

# CORS 설정 - Vercel 도메인 허용
app.cors.allowed-origins=${FRONTEND_URL:http://localhost:3000}

# Logging 설정
logging.level.com.example.klue_sever=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.boot.actuator=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Connection Pool 최적화
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JVM 메모리 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY:}

# Railway 컨테이너 환경 최적화
spring.main.lazy-initialization=false
server.tomcat.threads.max=20
server.tomcat.threads.min-spare=10 